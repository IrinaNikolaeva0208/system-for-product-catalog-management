version: '3.9'

services:
  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: src/api-gateway/Dockerfile
    restart: always
    networks:
      - app-network
      - broker
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    depends_on:
      - postgres
      - auth
      - catalog
      - basket
    command: yarn run start:dev

  auth:
    container_name: auth
    build:
      context: .
      dockerfile: src/auth/Dockerfile
    restart: always
    networks:
      - app-network
      - broker
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
    depends_on:
      - postgres
    command: yarn run start:dev

  catalog:
    container_name: catalog
    build:
      context: .
      dockerfile: src/catalog/Dockerfile
    restart: always
    networks:
      - app-network
      - broker
    ports:
      - ${CATALOG_PORT}:${CATALOG_PORT}
    depends_on:
      - postgres
    command: yarn run start:dev

  basket:
    container_name: basket
    build:
      context: .
      dockerfile: src/basket/Dockerfile
    restart: always
    networks:
      - app-network
      - broker
    ports:
      - ${BASKET_PORT}:${BASKET_PORT}
    depends_on:
      - postgres
    command: yarn run start:dev

  postgres:
    container_name: postgres1
    image: postgres:15-alpine
    restart: always
    networks:
      - app-network
    ports:
      - "${DB_PORT}:${POSTGRES_PORT}"
    env_file:
      - .env

networks:
  app-network:
    driver: bridge
  broker:
    driver: bridge

volumes:
  app-volume:


